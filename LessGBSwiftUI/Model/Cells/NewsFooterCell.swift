//
//  NewsFooterCell.swift
//  LessGBSwiftUI
//
//  Created by –ï–≤–≥–µ–Ω–∏–π –î–æ–±—Ä–æ–≤–æ–ª–µ—Ü on 08.09.2022.
//

import UIKit

// –ü—Ä–æ—Ç–æ–∫–æ–ª —è—á–µ–π–∫–∏ —Ñ—É—Ç–µ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è NewsController
protocol NewsFooterCellType {
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç —è—á–µ–π–∫—É –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    func configure (with model: NewsTableViewCellModelType)
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∞–π–∫–æ–≤
    var likesResponder: NewsViewModelType? { get set }
}

// –Ø—á–µ–π–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ NewsController
final class NewsFooterCell: UITableViewCell, NewsFooterCellType {

    private let footerView: UIView = {
        let view = UIView()
        view.translatesAutoresizingMaskIntoConstraints = false
        return view
    }()
    
    private let footerHorizontalStack: UIStackView = {
        let stack = UIStackView()
        stack.axis = .horizontal
        stack.distribution = .fillEqually
        stack.contentMode = .center
        stack.spacing = 20
        stack.translatesAutoresizingMaskIntoConstraints = false
        return stack
    }()
    
    private let likesControl: LikeControl = {
        let likeControl = LikeControl(frame: .zero)
        likeControl.tintColor = .red
        return likeControl
    }()
    
    private let commentsControl: CommentsControl = {
        let comments = CommentsControl(frame: .zero)
        return comments
    }()
    
    private let repostsControl: RepostsControl = {
        let reposts = RepostsControl(frame: .zero)
        return reposts
    }()
    
    private let viewsLabel: UILabel = {
        let views = UILabel(frame: .zero)
        views.font = UIFont.fourteen
        views.translatesAutoresizingMaskIntoConstraints = false
        return views
    }()

    // –ú–æ–¥–µ–ª—å –Ω–æ–≤–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º
    private var model: NewsTableViewCellModelType?
    
    // –í—å—é –º–æ–¥–µ–ª—å
    var likesResponder: NewsViewModelType?
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç —è—á–µ–π–∫—É NewsTableViewCell
    /// - Parameters:
    ///   - model: –ú–æ–¥–µ–ª—å –Ω–æ–≤–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å
    func configure (with model: NewsTableViewCellModelType) {
        setupCell()
        setupFooter()
        setupConstraints()
        
        self.model = model
        updateCellData(with: model)
        
        selectionStyle = .none
        likesControl.setLikesResponder(responder: self)
    }
}

// MARK: - Private methods
private extension NewsFooterCell {
    
    func setupConstraints() {
        
        NSLayoutConstraint.activate([
            footerView.leadingAnchor.constraint(equalTo: contentView.leadingAnchor, constant: 10),
            footerView.trailingAnchor.constraint(equalTo: contentView.trailingAnchor, constant: -10),
            footerView.bottomAnchor.constraint(equalTo: contentView.bottomAnchor),
            footerView.heightAnchor.constraint(equalToConstant: 30),
            
            footerHorizontalStack.leadingAnchor.constraint(equalTo: footerView.leadingAnchor),
            footerHorizontalStack.trailingAnchor.constraint(lessThanOrEqualTo: viewsLabel.leadingAnchor, constant: -10),
            footerHorizontalStack.centerYAnchor.constraint(equalTo: footerView.centerYAnchor),
            
            viewsLabel.trailingAnchor.constraint(equalTo: footerView.trailingAnchor, constant: -10),
            viewsLabel.centerYAnchor.constraint(equalTo: footerView.centerYAnchor),
        ])
        
        let footerTop = footerView.topAnchor.constraint(equalTo: contentView.bottomAnchor, constant: 20)
        footerTop.priority = .init(rawValue: 999)
        footerTop.isActive = true
    }
    
    func setupCell() {
        contentView.addSubview(footerView)
    }
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º —Ñ—É—Ç–µ—Ä
    func setupFooter() {
        footerHorizontalStack.addArrangedSubview(likesControl)
        footerHorizontalStack.addArrangedSubview(commentsControl)
        footerHorizontalStack.addArrangedSubview(repostsControl)
        footerView.addSubview(viewsLabel)
        footerView.addSubview(footerHorizontalStack)
    }
    
    // –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —è—á–µ–π–∫–∏
    func updateCellData(with model: NewsTableViewCellModelType) {
        likesControl.setCount(with: model.likesModel?.count ?? 0)
        commentsControl.setCount(with: model.comments?.count ?? 0)
        commentsControl.setImage(with: "bubble.left")
        repostsControl.setCount(with: model.reposts?.count ?? 0)
        repostsControl.setImage(with: "arrowshape.turn.up.right")
        viewsLabel.text = "üîç \(model.views?.count ?? 0)"
    }
}

// MARK: - CanLike protocol extension

extension NewsFooterCell: CanLike {
    
    //  –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –ª–∞–π–∫ –ø–æ—Å—Ç–∞
    func setLike() {
        if let id = model?.postID,
           let ownerId = model?.source.id {
            likesResponder?.setLike(post: id, owner: ownerId) { [weak self] result in
                self?.likesControl.setCount(with: result)
            }
        }
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –ª–∞–π–∫–∞
    func removeLike() {
        if let id = model?.postID,
           let ownerId = model?.source.id {
            likesResponder?.setLike(post: id, owner: ownerId) { [weak self] result in
                self?.likesControl.setCount(with: result)
            }
        }
    }
}
